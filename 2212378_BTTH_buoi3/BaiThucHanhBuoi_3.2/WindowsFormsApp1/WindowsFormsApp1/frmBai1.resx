<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CpA3iEklAsASSSUH/9k=
</value>
  </data>
</root>